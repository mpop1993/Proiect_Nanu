   1               		.file	"shift_reg_library.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 103               	.global	shiftOne
 105               	shiftOne:
   1:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** #include <avr/io.h>
   2:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** #include <util/delay.h>
   3:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** 
   4:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** #include "shift_reg_library.h"
   5:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** 
   6:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** void shiftOne(int number){
 107               	.LM0:
 108               	.LFBB1:
 109               	/* prologue: function */
 110               	/* frame size = 0 */
 111               	/* stack size = 0 */
 112               	.L__stack_usage = 0
   7:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     
   8:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     if(number==1){
 114               	.LM1:
 115 0000 8130      		cpi r24,1
 116 0002 9105      		cpc r25,__zero_reg__
 117 0004 01F4      		brne .L2
   9:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 1<<4;
 119               	.LM2:
 120 0006 80E1      		ldi r24,lo8(16)
 121 0008 8BB9      		out 0xb,r24
 122               	.LBB30:
 123               	.LBB31:
 125               	.Ltext1:
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 127               	.LM3:
 128 000a 8FE3      		ldi r24,lo8(-25537)
 129 000c 9CE9      		ldi r25,hi8(-25537)
 130 000e 0197      		1: sbiw r24,1
 131 0010 01F4      		brne 1b
 132 0012 00C0      		rjmp .
 133 0014 0000      		nop
 134               	.LBE31:
 135               	.LBE30:
 137               	.Ltext2:
  10:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  11:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  12:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = (1<<4)|(1<<3);
 139               	.LM4:
 140 0016 88E1      		ldi r24,lo8(24)
 141 0018 00C0      		rjmp .L4
 142               	.L2:
  13:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  14:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  15:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<3;
  16:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  17:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     }
  18:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     
  19:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     else if(number==2){
 144               	.LM5:
 145 001a 0297      		sbiw r24,2
 146 001c 01F4      		brne .L1
  20:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 1<<6;
 148               	.LM6:
 149 001e 80E4      		ldi r24,lo8(64)
 150 0020 8BB9      		out 0xb,r24
 151               	.LBB32:
 152               	.LBB33:
 154               	.Ltext3:
 156               	.LM7:
 157 0022 8FE3      		ldi r24,lo8(-25537)
 158 0024 9CE9      		ldi r25,hi8(-25537)
 159 0026 0197      		1: sbiw r24,1
 160 0028 01F4      		brne 1b
 161 002a 00C0      		rjmp .
 162 002c 0000      		nop
 163               	.LBE33:
 164               	.LBE32:
 166               	.Ltext4:
  21:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  22:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  23:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = (1<<6)|(1<<5);
 168               	.LM8:
 169 002e 80E6      		ldi r24,lo8(96)
 170               	.L4:
 171 0030 8BB9      		out 0xb,r24
 172               	.LBB34:
 173               	.LBB35:
 175               	.Ltext5:
 177               	.LM9:
 178 0032 8FE3      		ldi r24,lo8(-25537)
 179 0034 9CE9      		ldi r25,hi8(-25537)
 180 0036 0197      		1: sbiw r24,1
 181 0038 01F4      		brne 1b
 182 003a 00C0      		rjmp .
 183 003c 0000      		nop
 184               	.LBE35:
 185               	.LBE34:
 187               	.Ltext6:
  24:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  25:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  26:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<5;
 189               	.LM10:
 190 003e 1BB8      		out 0xb,__zero_reg__
 191               	.LBB36:
 192               	.LBB37:
 194               	.Ltext7:
 196               	.LM11:
 197 0040 8FE3      		ldi r24,lo8(-25537)
 198 0042 9CE9      		ldi r25,hi8(-25537)
 199 0044 0197      		1: sbiw r24,1
 200 0046 01F4      		brne 1b
 201 0048 00C0      		rjmp .
 202 004a 0000      		nop
 203               	.L1:
 204 004c 0895      		ret
 205               	.LBE37:
 206               	.LBE36:
 208               	.Lscope1:
 211               	.global	shiftNull
 213               	shiftNull:
 215               	.Ltext8:
  27:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  28:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     }
  29:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** }
  30:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** 
  31:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** void shiftNull(int number){
 217               	.LM12:
 218               	.LFBB2:
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 0 */
 222               	.L__stack_usage = 0
  32:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     
  33:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     if(number==1){
 224               	.LM13:
 225 004e 8130      		cpi r24,1
 226 0050 9105      		cpc r25,__zero_reg__
 227 0052 01F4      		brne .L7
  34:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<4;
 229               	.LM14:
 230 0054 1BB8      		out 0xb,__zero_reg__
 231               	.LBB38:
 232               	.LBB39:
 234               	.Ltext9:
 236               	.LM15:
 237 0056 8FE3      		ldi r24,lo8(-25537)
 238 0058 9CE9      		ldi r25,hi8(-25537)
 239 005a 0197      		1: sbiw r24,1
 240 005c 01F4      		brne 1b
 241 005e 00C0      		rjmp .
 242 0060 0000      		nop
 243               	.LBE39:
 244               	.LBE38:
 246               	.Ltext10:
  35:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  36:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  37:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = (0<<4)|(1<<3);
 248               	.LM16:
 249 0062 88E0      		ldi r24,lo8(8)
 250 0064 00C0      		rjmp .L9
 251               	.L7:
  38:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  39:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  40:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<3;
  41:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  42:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     }
  43:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     
  44:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     else if(number==2){
 253               	.LM17:
 254 0066 0297      		sbiw r24,2
 255 0068 01F4      		brne .L6
  45:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<6;
 257               	.LM18:
 258 006a 1BB8      		out 0xb,__zero_reg__
 259               	.LBB40:
 260               	.LBB41:
 262               	.Ltext11:
 264               	.LM19:
 265 006c 8FE3      		ldi r24,lo8(-25537)
 266 006e 9CE9      		ldi r25,hi8(-25537)
 267 0070 0197      		1: sbiw r24,1
 268 0072 01F4      		brne 1b
 269 0074 00C0      		rjmp .
 270 0076 0000      		nop
 271               	.LBE41:
 272               	.LBE40:
 274               	.Ltext12:
  46:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  47:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  48:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = (0<<6)|(1<<5);
 276               	.LM20:
 277 0078 80E2      		ldi r24,lo8(32)
 278               	.L9:
 279 007a 8BB9      		out 0xb,r24
 280               	.LBB42:
 281               	.LBB43:
 283               	.Ltext13:
 285               	.LM21:
 286 007c 8FE3      		ldi r24,lo8(-25537)
 287 007e 9CE9      		ldi r25,hi8(-25537)
 288 0080 0197      		1: sbiw r24,1
 289 0082 01F4      		brne 1b
 290 0084 00C0      		rjmp .
 291 0086 0000      		nop
 292               	.LBE43:
 293               	.LBE42:
 295               	.Ltext14:
  49:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  50:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         
  51:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****         PORTD = 0<<5;
 297               	.LM22:
 298 0088 1BB8      		out 0xb,__zero_reg__
 299               	.LBB44:
 300               	.LBB45:
 302               	.Ltext15:
 304               	.LM23:
 305 008a 8FE3      		ldi r24,lo8(-25537)
 306 008c 9CE9      		ldi r25,hi8(-25537)
 307 008e 0197      		1: sbiw r24,1
 308 0090 01F4      		brne 1b
 309 0092 00C0      		rjmp .
 310 0094 0000      		nop
 311               	.L6:
 312 0096 0895      		ret
 313               	.LBE45:
 314               	.LBE44:
 316               	.Lscope2:
 318               	.global	serialSend
 320               	serialSend:
 322               	.Ltext16:
  52:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****             _delay_ms(20);
  53:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     }
  54:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** }
  55:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** 
  56:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c **** void serialSend(void){
 324               	.LM24:
 325               	.LFBB3:
 326               	/* prologue: function */
 327               	/* frame size = 0 */
 328               	/* stack size = 0 */
 329               	.L__stack_usage = 0
  57:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     
  58:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     PORTD = 1<<7;
 331               	.LM25:
 332 0098 80E8      		ldi r24,lo8(-128)
 333 009a 8BB9      		out 0xb,r24
 334               	.LBB46:
 335               	.LBB47:
 337               	.Ltext17:
 339               	.LM26:
 340 009c 8FE3      		ldi r24,lo8(-25537)
 341 009e 9CE9      		ldi r25,hi8(-25537)
 342 00a0 0197      		1: sbiw r24,1
 343 00a2 01F4      		brne 1b
 344 00a4 00C0      		rjmp .
 345 00a6 0000      		nop
 346               	.LBE47:
 347               	.LBE46:
 349               	.Ltext18:
  59:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     _delay_ms(20);
  60:/Users/Mihai/Documents/GitHub/Proiect_Nanu/avr3/shift_reg_library.c ****     PORTD = 0<<7;
 351               	.LM27:
 352 00a8 1BB8      		out 0xb,__zero_reg__
 353               	.LBB48:
 354               	.LBB49:
 356               	.Ltext19:
 358               	.LM28:
 359 00aa 8FE3      		ldi r24,lo8(-25537)
 360 00ac 9CE9      		ldi r25,hi8(-25537)
 361 00ae 0197      		1: sbiw r24,1
 362 00b0 01F4      		brne 1b
 363 00b2 00C0      		rjmp .
 364 00b4 0000      		nop
 365 00b6 0895      		ret
 366               	.LBE49:
 367               	.LBE48:
 369               	.Lscope3:
 371               	.Letext0:
 372               		.ident	"GCC: (GNU) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 shift_reg_library.c
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:2      *ABS*:0000003e __SP_H__
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:3      *ABS*:0000003d __SP_L__
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:4      *ABS*:0000003f __SREG__
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:6      *ABS*:00000001 __zero_reg__
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:105    .text:00000000 shiftOne
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:213    .text:0000004e shiftNull
/var/folders/0l/v5bxx64s22z65_nc6ss582bm0000gn/T//ccnCGklr.s:320    .text:00000098 serialSend

NO UNDEFINED SYMBOLS
